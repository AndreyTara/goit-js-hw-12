{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-function.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nexport function pixabayApi(picThema, page, perPage = 20) {\n  const BASE_URL = 'https://pixabay.com/api/';\n  const params = new URLSearchParams({\n    key: '32923501-8d8c5bf31ee0b7b85cce4fb99',\n    q: picThema,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    page: page,\n    per_page: perPage,\n  });\n\n  const url = `${BASE_URL}?${params.toString()}`;\n  return axios.get(url);\n}\n","export function renderFunction(data, page) {\n  // console.log(data.length);\n  return data\n    .map(\n      (\n        item,\n        index\n      ) => `<a class=\"section-item\" data-source =\"${index}\" data-id=${item.id} href ='${item.largeImageURL}'> \n            <img \n            class=\"section-img\"\n            src=\"${item.webformatURL}\"\n            alt=\"${item.tags}\"\n            >\n            <div class=\"section-soc\">\n             <div class=\"section-info\">\n                <p class=\"section-props\">Likes</p>\n                <span class=\"section-props-count\">${item.likes}</span>\n              </div>\n              <div class=\"section-info\">\n                <p class=\"section-props\">Views</p>\n                <span class=\"section-props-count\">${item.views}</span>\n              </div>\n              <div class=\"section-info\">\n                <p class=\"section-props\">Comments</p>\n                <span class=\"section-props-count\">${item.comments}</span>\n              </div>\n              <div class=\"section-info\">\n                <p class=\"section-props\">Downloads</p>\n                <span class=\"section-props-count\">${item.downloads}</span>\n              </div>\n            </div>\n          </a>`\n    )\n    .join('');\n}\n","//Функція отримання проміса за запитом\nimport { pixabayApi } from './js/pixabay-api.js';\n\n// рендер картинок\nimport { renderFunction } from './js/render-function.js';\n\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n// Описаний в документації\nimport SimpleLightbox from 'simplelightbox';\n// Додатковий імпорт стилів\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\n// налаштування IziToast\nconst optionsIziToast = {\n  theme: 'light', // темна тема\n  timeout: 3000, // час прогресс бару\n  title:\n    'Sorry, there are no images matching your search query. Please try again!', //фраза сповіщення\n  titleSize: 16,\n  position: 'topRight', // bottomRight, bottomLeft, topRight, topLeft, topCenter, bottomCenter\n  progressBar: true,\n  displayMode: 'once', // спрацювати 1 раз\n  transitionIn: 'fadeInUp',\n  close: true, // закривання при натисканні на будь-який елемент сповіщення\n};\n\n// налаштування lightBox\nconst lightBox = new SimpleLightbox('.section-list a', {\n  captionsData: 'alt',\n  captionPosition: 'bottom',\n  captionDelay: 250,\n  overlayOpacity: 0.3,\n  widthRatio: 0.77,\n  heightRatio: 0.919,\n});\n// змінні форма, зони додавання контент, текстове повідомлення при завантаженні + лодер , кнопка loadMore,\nconst refs = {\n  formEl: document.querySelector('.section-form'),\n  listEl: document.querySelector('.section-list'),\n  textEl: document.querySelector('.section-text'),\n  btnEl: document.querySelector('.section-more-btn'),\n};\n\n// змінна макс елементів контенту\nlet totalHits = 500;\n\n// змінна кілкість елементів контенту за 1 запит\nconst perPage = 15;\n\n//максимальна кількість кроків додавання контенту\nlet totalPages = tpCount(totalHits, perPage);\n\nfunction tpCount(totalHits, perPage) {\n  return Math.ceil(totalHits / perPage);\n}\n\n//початкова сторінка для завантаження контенту\nlet page = 1;\n\n// підключення слухача подій на форму\nrefs.formEl.addEventListener('submit', onHandleSubmit);\n\n/**\n * render section list to submit form\n * @param {*} event\n * @returns\n */\nasync function onHandleSubmit(event) {\n  //відключення стандартної поведінки форми\n  event.preventDefault();\n  //початкова сторінка для завантаження контенту У РАЗЫ НОВОГО ЗАПРОСУ\n  page = 1;\n  //відображення константи кнопки submit Form\n  const btnSubmit = event.target.elements.btnSubmit;\n  // нективна кнопка до завешення запиту\n  btnSubmit.disabled = true;\n  //очищення списку додавання контенту\n  refs.listEl.innerHTML = '';\n  // отримання значення у формі - инпуті\n  const themaOfThePics = event.target.elements.query.value;\n  // перевірка чи вводиляся данні у інпут\n  if (!themaOfThePics) {\n    return;\n  }\n  //відловлювання помилок при запитах\n  try {\n    // прибрання у тексту та лодеру класу 'hidden'\n    refs.textEl.classList.remove('hidden');\n    // формування запиту за темою, сторінкою, та відображенного контенту\n    const res = await pixabayApi(themaOfThePics, page, perPage);\n    //отримання данних за ключем '.data'\n    const pics = res.data;\n    //перевірка на кількість можливих отриманих елементів із сайту для завантаження на поточну сторінцу\n    if (pics.totalHits < totalHits) {\n      totalPages = tpCount(pics.totalHits, perPage);\n    }\n    //перевірка на отримання данних //якщо відсутні\n    if (!pics.hits.length) {\n      //вивести вікно попередження про відсутність даних\n      iziToast.error(optionsIziToast);\n      // додавання  у тексту та лодеру класу 'hidden'\n      refs.textEl.classList.add('hidden');\n      return;\n    }\n\n    //рендерінг у строку контенту arr, 'сторінка'\n    const markup = renderFunction(pics.hits, page);\n    //відмільювівання контенту\n    refs.listEl.insertAdjacentHTML('beforeend', markup);\n    //додавання lightBox до відмальованного контенту\n    lightBox.refresh();\n    // //перевірка 'сторінки' контенту на ліміт контенту\n    if (page >= totalPages) {\n      //додавання попереджувального вікна про відсутність контенту або достатнього для відображення\n      iziToast.error({\n        ...optionsIziToast,\n        title: \"We're sorry, there are no more posts to load.\",\n      });\n      // кнопка loadMore додати стиль \"display = 'none'\"\n      refs.btnEl.style.display = 'none';\n      // текс+лодер додати класс 'hidden'\n      refs.textEl.classList.add('hidden');\n      return;\n    }\n\n    //затримка для роботи лодера 1 секунда\n    setTimeout(() => {\n      // текс+лодер додати класс 'hidden'\n      refs.textEl.classList.add('hidden');\n      // текс+лодер додати \"order = 1\"\n      refs.textEl.style.order = 1;\n      // кнопка loadMore додати стиль \"display = 'block'\"\"\n      refs.btnEl.style.display = 'block';\n      // смітити контент на 2 розміри висоти останньої картки  класу '.section-list'\n      toScroll('.section-list');\n    }, 1000);\n  } catch (error) {\n    // відображення попереджуваного вікна про помилку\n    iziToast.error(optionsIziToast);\n    // текс+лодер додати класс 'hidden'\n    refs.textEl.classList.add('hidden');\n    // відображення про помилку у консолі\n    console.log(error.message);\n  } finally {\n    //відображення активної кнопки після запиту\n    btnSubmit.disabled = false;\n    console.log(page);\n  }\n}\n\n//підключення слухача на кнопку loadMore\nrefs.btnEl.addEventListener('click', handleClick);\n/**\n * render section list to click loadMore\n * @param {*} event\n * @returns\n */\nasync function handleClick(event) {\n  //кнопка loadMore не активна\n  refs.btnEl.disabled = true;\n  // додавння 1 до змінної page\n  page++;\n  //отримання поточного значення форми - инпуту\n  const themaOfThePics = refs.formEl.elements.query.value;\n\n  try {\n    // прибрання у тексту та лодеру класу 'hidden'\n    refs.textEl.classList.remove('hidden');\n    //вітворення запиту до серверу для отримання обїєкту\n    const res = await pixabayApi(themaOfThePics, page, perPage);\n    //отримання arr для відображення на сторінці\n    const pics = res.data;\n    //кнопка loadMore додати стиль \"display = 'none'\"\n    refs.btnEl.style.display = 'none';\n    //формування шаблонної строки в залежності від отриманого масиву\n    const markup = renderFunction(pics.hits, page);\n    //відмільювівання контенту\n    refs.listEl.insertAdjacentHTML('beforeend', markup);\n    //навішування lightBox на зававнтажений на сторінку контент\n    lightBox.refresh();\n    //якщо кількість сторінок відповідає максимальній кількості контенту\n    if (page >= totalPages) {\n      //додавання попереджувального вікна про відсутність контенту або достатнього для відображення\n      iziToast.error({\n        ...optionsIziToast,\n        title: \"We're sorry, there are no more posts to load.\",\n      });\n      // кнопка loadMore додати стиль \"display = 'none'\"\n      refs.btnEl.style.display = 'none';\n      // текс+лодер додати класс 'hidden'\n      refs.textEl.classList.add('hidden');\n      return;\n    }\n    //затримка щоб побачити спінер\n    setTimeout(() => {\n      // текс+лодер додати класс 'hidden'\n      refs.textEl.classList.add('hidden');\n      //// кнопка loadMore додати стиль \"display = 'block'\"\n      refs.btnEl.style.display = 'block';\n      //плавний скрол  сторнки після підвантаження елементів\n      toScroll('.section-list');\n    }, 1000);\n  } catch (error) {\n    // відображення попереджуваного вікна про помилку\n    iziToast.error(optionsIziToast);\n    // текс+лодер додати класс 'hidden'\n    refs.textEl.classList.add('hidden');\n    // кнопка loadMore додати стиль \"display = 'none'\"\n    refs.btnEl.style.display = 'none';\n    // відображення про помилку у консолі\n    console.log(error);\n  } finally {\n    //відображення активної кнопки після запиту\n    refs.btnEl.disabled = false;\n    console.log(page);\n  }\n}\n\n/**\n * scroll bottom to 2 height last card\n * @param {*} srtClDom\n */\nfunction toScroll(srtClDom) {\n  // refs.listEl.addEventListener('scroll', fnScroll, { once: true });\n  // function fnScroll() {\n  // розрахунок 2 висоти останнього елементу контенту\n  const heightItem =\n    document.querySelector(`${srtClDom}`).lastChild.clientHeight * 2;\n  // скрол у відповідності до заданої висоти\n  window.scrollBy({\n    top: heightItem,\n    left: 0,\n    behavior: 'smooth',\n  });\n  // }\n}\n"],"names":["pixabayApi","picThema","page","perPage","BASE_URL","params","url","axios","renderFunction","data","item","index","optionsIziToast","lightBox","SimpleLightbox","refs","totalHits","totalPages","tpCount","onHandleSubmit","event","btnSubmit","themaOfThePics","pics","iziToast","markup","toScroll","error","handleClick","srtClDom","heightItem"],"mappings":"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"}